# -*- mode: python -*-

import os

from penchy.jobs import *
import config

x64NODE = NodeSetting('192.168.56.11', 22, 'bench', '/home/bench', '/usr/bin')
x86NODE = NodeSetting('192.168.56.10', 22, 'bench', '/home/bench', '/usr/bin')

client = jvms.JVM('java')
server = jvms.JVM('java', '-server')
x32 = SystemComposition(client, x86NODE, name="x86")
x64 = SystemComposition(server, x64NODE, name="x64")

w = workloads.ScalaBench('fop')
client.workload = w
server.workload = w

f1 = filters.DacapoHarness()
f2 = filters.Send()

job = Job(compositions=[x32, x64],
          client_flow=[
              w >> ['stderr', 'exit_code'] >> f1 >> ('times', 'payload') >> f2
          ],
          server_flow=[
              filters.Receive() >> filters.Print()
          ],
          invocations = 1
          )
