#!/usr/bin/env python

import sys
import logging

from subprocess import Popen, PIPE
from os.path import expanduser

logging.basicConfig(level=logging.INFO, filename='penchy_client.log')
log = logging.getLogger('penchy-bootstrap')



def mvn_install():
    log.debug("Executing mvn install:")
    proc = Popen(['mvn', 'install'], stdout=PIPE, stderr=PIPE)
    stdout, _ = proc.communicate() # Maven doesn't use stderr...
    log.debug(stdout)

def get_mvn_classpath():
    log.debug("Getting classpath")
    proc2 = Popen(['mvn', 'dependency:build-classpath'], stdout=PIPE,
            stderr=PIPE)
    stdout, _ = proc2.communicate()
    for line in stdout.split("\n"):
        if not line.startswith("["):
            log.info("Classpath found at " + line)
            return line
    log.error("Classpath could not be determined")

def main():
    mvn_install()
    classpath = get_mvn_classpath()
    penchy_zip = filter(lambda x: x.endswith("zip"), classpath.split(":"))[0]

    log.info("Starting PenchY Client")

    sys.path.insert(0, penchy_zip)

    from penchy import client
    client.main()

    return 0

if __name__ == "__main__":
    if len(sys.argv) > 1:
        if sys.argv[1] == '-d':
            logging.root.setLevel(logging.DEBUG)
    try:
        sys.exit(main())
    except Exception, err:
        log.exception('Exception occured while executing PenchY')
        sys.exit(1)
