#!/usr/bin/env python

import sys
import logging
import imp
from getopt import getopt, GetoptError

from subprocess import Popen, PIPE

logging.basicConfig(level=logging.INFO, filename='penchy_bootstrap.log')
log = logging.getLogger('penchy-bootstrap')


def main(args):
    log.debug("Executing mvn install:")
    proc = Popen(['mvn', '-f', 'bootstrap.pom', 'install'],
            stdout=PIPE, stderr=PIPE)
    stdout, _ = proc.communicate()  # Maven doesn't use stderr...
    log.debug(stdout)

    log.debug("Getting classpath")
    proc2 = Popen(['mvn', '-f', 'bootstrap.pom', 'dependency:build-classpath'],
            stdout=PIPE, stderr=PIPE)
    stdout, _ = proc2.communicate()
    for line in stdout.split("\n"):
        if not line.startswith("["):
            log.info("Classpath found at " + line)
            return line
    log.error("Classpath could not be determined")

    classpath = maven_setup()
    penchy_zip = filter(lambda x: x.endswith("zip"), classpath.split(":"))[0]
    log.info("Starting PenchY Client")

    sys.path.insert(0, penchy_zip)
    from penchy import client
    client.main(args)


if __name__ == "__main__":
    try:
        main(sys.argv)
    except Exception, err:
        log.exception('Exception occured while executing PenchY:')
        sys.exit(1)
