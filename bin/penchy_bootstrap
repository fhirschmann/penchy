#!/usr/bin/env python

import os
import sys
import logging
import imp
from getopt import getopt, GetoptError

from subprocess import Popen, PIPE

logging.basicConfig(level=logging.INFO, filename='penchy_bootstrap.log')
log = logging.getLogger('penchy-bootstrap')


def main(args):
    """
    This method starts the bootstrap client. All arguments will be
    passed to the real client.

    A valid bootstrap.pom in the current working directory is
    expected!
    """
    log.debug("Executing mvn install:")
    proc = Popen(['mvn', '-f', 'bootstrap.pom', 'install'], stdout=PIPE)
    stdout, _ = proc.communicate()
    log.debug(stdout)

    log.debug("Getting classpath")
    proc2 = Popen(['mvn', '-f', 'bootstrap.pom', 'dependency:build-classpath'],
            stdout=PIPE)
    stdout, _ = proc2.communicate()
    for classpath in stdout.split(os.linesep):
        if classpath.endswith('-py.zip'):
            break

    penchy_zip = filter(lambda x: x.endswith("zip"), classpath.split(":"))[0]
    log.info("Starting PenchY Client from %s" % penchy_zip)

    sys.path.insert(0, penchy_zip)
    from penchy.client import Client
    client = Client()
    client.parse_args(sys.argv)
    client.run()


if __name__ == "__main__":
    try:
        with open('penchy.pid', 'w') as pidfile:
            pidfile.write(str(os.getpid()))

        main(sys.argv)
    except Exception, err:
        log.exception('Exception occured while executing PenchY:')
        sys.exit(1)
