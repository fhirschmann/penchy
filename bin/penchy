#!/usr/bin/env python

"""
This is the main entry point for PenchY.

Execute this if you want to run the full PenchY
cycle (deploying jobs, executing jobs, accumulating results).
"""

import sys
import imp
import logging
import os

import argparse

from penchy.server import Server


if __name__ == "__main__":
    if '--load-from' in sys.argv:
        test_doc = """
        By running this, you'll execute PenchY in test mode, which
        means the PenchY client will not be executed from the zip
        file deployed in the maven repository but loaded from a path
        (--load-from).
        """
    else:
        test_doc = ''

    parser = argparse.ArgumentParser(description=__doc__ + test_doc)
    log_group = parser.add_mutually_exclusive_group()
    log_group.add_argument("-d", "--debug",
            action="store_const", const=logging.DEBUG,
            dest="loglevel", default=logging.INFO,
            help="print debugging messages")
    log_group.add_argument("-q", "--quiet",
            action="store_const", const=logging.WARNING,
            dest="loglevel", help="suppress most messages")
    parser.add_argument("-c", "--config",
            action="store", dest="config",
            default=os.path.expanduser("~/.penchyrc"),
            help="config module to use")
    parser.add_argument("-f", "--load-from",
            action="store", dest="load_from",
            help="load penchy from this path on the node")
    parser.add_argument("job", help="job to execute",
            metavar="job")
    args = parser.parse_args()

    server = Server(args.config, args.job)

    logging.root.setLevel(args.loglevel)

    if args.load_from:
        server.bootstrap_args.extend(['--load-from', args.load_from])

    server.run()
