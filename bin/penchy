#!/usr/bin/env python

"""
This is the main entry point for PenchY.

Execute this if you want to run the full PenchY
cycle (deploying jobs, executing jobs, accumulating results).
"""

import logging
import os

import argparse

from penchy.server import Server
from penchy.util import load_job, load_config
from penchy.log import configure_logging


if __name__ == "__main__":
    parser = argparse.ArgumentParser(description=__doc__)
    log_group = parser.add_mutually_exclusive_group()
    log_group.add_argument("-d", "--debug",
            action="store_const", const=logging.DEBUG,
            dest="loglevel", default=logging.INFO,
            help="print debugging messages")
    log_group.add_argument("-q", "--quiet",
            action="store_const", const=logging.WARNING,
            dest="loglevel", help="suppress most messages")
    parser.add_argument("-c", "--config",
            action="store", dest="config",
            default=os.path.expanduser("~/.penchyrc"),
            help="config module to use")
    parser.add_argument("-f", "--load-from",
            action="store", dest="load_from",
            help="load penchy from this path on the node")
    mode_group = parser.add_mutually_exclusive_group()
    mode_group.add_argument("--check", action="store_true",
            dest="check", help="check a job for validity and exit")
    mode_group.add_argument("--run-locally", action="store_true",
            dest="local", help="test a job by running it locally")
    parser.add_argument("job", help="job to execute",
            metavar="job")
    args = parser.parse_args()

    config = load_config(args.config)
    job_module = load_job(args.job)
    job = job_module.job

    configure_logging(args.loglevel)

    if args.check:
        for composition in job.compositions:
            job.check()
    elif args.local:
        compositions = job.compositions_for_node("localhost")
        if len(compositions) == 0:
            raise ValueError("Job has no JVMNodeConfiguration for \"localhost\"")
        for composition in compositions:
            job.run(composition)
    else:
        server = Server(config, job_module)

        if args.load_from:
            server.bootstrap_args.extend(['--load-from', args.load_from])

        server.run()
