# -*- mode: python -*-

from penchy.jobs import *
import config

# Only the i386 node
node = NodeSetting('192.168.56.10', 22, 'bench', '/home/bench', '/usr/bin')

benchmarks = ['fop', 'batik']

# Client side filters
f = filters.DacapoHarness()
unpack = filters.Map(filters.Unpack())
send = filters.Send()

comps = []
for bench in benchmarks:
    jvm = jvms.JVM('java')
    jvm.workload = workloads.ScalaBench(bench)
    comp = SystemComposition(jvm, node)
    comp.flow = [jvm.workload >> 'stderr' >> f >> ('times', 'values') >> unpack >> ('values', 'times') >> send]
    comps.append(comp)

# Server side filters
merge = filters.MergingReceive(('time','bench'),
                                     [(com, 'times', Value(bench)) for com, bench in zip(comps, benchmarks)])

extract = filters.ExtractingReceive('times')
deco = filters.Decorate('Invocation {0}')
enum = filters.Enumerate()

plot = plots.BarPlot(filename='/tmp/barplot.svg', title='testplot', xlabel='x', ylabel='y')

job = Job(compositions=comps,
          server_flow=[
              merge >> [('bench', 'x'), ('time', 'y')] >> plot,
              extract >> ('times', 'values') >> enum >> ('numbers', 'values') >> deco >> ('values', 'z') >> plot
          ],
          invocations = 2
          )
